<UserControl xmlns="https://github.com/avaloniaui" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:system="clr-namespace:System;assembly=System.Runtime"
             xmlns:viewModels="clr-namespace:GuitarConfigurator.NetCore.ViewModels"
             xmlns:netCore="clr-namespace:GuitarConfigurator.NetCore"
             xmlns:conversions="clr-namespace:GuitarConfigurator.NetCore.Configuration.Conversions"
             xmlns:combined="clr-namespace:GuitarConfigurator.NetCore.Configuration.Outputs.Combined"
             xmlns:output="clr-namespace:GuitarConfigurator.NetCore.Configuration.Outputs"
             xmlns:views="clr-namespace:GuitarConfigurator.NetCore.Views"
             xmlns:other="clr-namespace:GuitarConfigurator.NetCore.Configuration.Other"
             xmlns:inputs="clr-namespace:GuitarConfigurator.NetCore.Configuration.Inputs"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450" x:DataType="viewModels:ConfigViewModel"
             x:Class="GuitarConfigurator.NetCore.Views.ConfigView"
             x:CompileBindings="True"
             Background="Transparent">
    <UserControl.Styles>
        <Style Selector="ComboBoxItem">
            <Setter Property="Padding" Value="0" />
        </Style>
        <Style Selector="ComboBoxItem TextBlock">
            <Setter Property="Padding" Value="{DynamicResource ComboBoxItemThemePadding}" />
        </Style>
    </UserControl.Styles>
    <UserControl.Resources>
        <netCore:EnumToStringConverter x:Key="EnumToStringConverter" />
        <netCore:PinToStringConverter x:Key="PinToStringConverter" />
        <netCore:ControllerEnumConverter x:Key="ControllerEnumConverter" />
        <netCore:InputImageConverter x:Key="InputImageConverter" />
        <DataTemplate x:Key="PinToStringTemplate" DataType="system:Object">
            <TextBlock>
                <TextBlock.Text>
                    <MultiBinding Converter="{StaticResource PinToStringConverter }">
                        <Binding />
                        <Binding Path="$parent[UserControl].DataContext" />
                        <Binding Path="$parent[ComboBox].SelectedItem" />
                        <Binding Path="$parent[ComboBox].DataContext" />
                        <Binding Path="$parent[ComboBoxItem]" />
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
        </DataTemplate>
        <DataTemplate x:Key="ControllerEnumTemplate" DataType="system:Object">
            <TextBlock>
                <TextBlock.Text>
                    <MultiBinding Converter="{StaticResource ControllerEnumConverter }">
                        <Binding />
                        <Binding Path="$parent[views:ConfigView].((viewModels:ConfigViewModel)DataContext).DeviceType" />
                        <Binding Path="$parent[views:ConfigView].((viewModels:ConfigViewModel)DataContext).RhythmType" />
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
        </DataTemplate>
        <DataTemplate x:Key="EnumToStringTemplate" DataType="system:Object">
            <TextBlock Text="{Binding Converter={StaticResource EnumToStringConverter }}" />
        </DataTemplate>
        <DataTemplate x:Key="ImageWithTextTemplate" DataType="system:Object">
            <StackPanel Orientation="Horizontal">
                <Image Width="25">
                    <Image.Source>
                        <MultiBinding Converter="{StaticResource InputImageConverter }">
                            <Binding />
                            <Binding
                                Path="$parent[views:ConfigView].((viewModels:ConfigViewModel)DataContext).DeviceType" />
                            <Binding
                                Path="$parent[views:ConfigView].((viewModels:ConfigViewModel)DataContext).RhythmType" />
                        </MultiBinding>
                    </Image.Source>
                </Image>
                <Label VerticalContentAlignment="Center" VerticalAlignment="Center">
                    <Label.Content>
                        <MultiBinding Converter="{StaticResource ControllerEnumConverter }">
                            <Binding />
                            <Binding Path="$parent[views:ConfigView].Model.DeviceType" />
                            <Binding Path="$parent[views:ConfigView].Model.RhythmType" />
                        </MultiBinding>
                    </Label.Content>
                </Label>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="ImageWithTextTemplateGeneric" DataType="system:Object">
            <StackPanel Orientation="Horizontal">
                <Image Width="25">
                    <Image.Source>
                        <MultiBinding Converter="{StaticResource InputImageConverter }">
                            <Binding />
                            <Binding
                                Path="$parent[views:ConfigView].((viewModels:ConfigViewModel)DataContext).DeviceType" />
                            <Binding
                                Path="$parent[views:ConfigView].((viewModels:ConfigViewModel)DataContext).RhythmType" />
                        </MultiBinding>
                    </Image.Source>
                </Image>
                <TextBlock Text="{Binding Converter={StaticResource EnumToStringConverter }}" />
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="ImageOutputTemplate" DataType="output:Output">
            <StackPanel Orientation="Horizontal">
                <Image Width="75" Opacity="{Binding ImageOpacity}">
                    <Image.Source>
                        <MultiBinding Converter="{StaticResource InputImageConverter }">
                            <Binding Path="OutputType" />
                            <Binding Path="$parent[views:ConfigView].Model.DeviceType" />
                            <Binding Path="$parent[views:ConfigView].Model.RhythmType" />
                        </MultiBinding>
                    </Image.Source>
                    <ToolTip.Tip>
                        <MultiBinding Converter="{StaticResource ControllerEnumConverter }">
                            <Binding Path="OutputType" />
                            <Binding Path="$parent[views:ConfigView].Model.DeviceType" />
                            <Binding Path="$parent[views:ConfigView].Model.RhythmType" />
                        </MultiBinding>
                    </ToolTip.Tip>
                </Image>
            </StackPanel>
        </DataTemplate>
        <netCore:OutputTemplateSelector x:Key="OutputSelectionTemplate">
            <DataTemplate DataType="{x:Type other:EmulationMode}">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Emulation Mode
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  SelectedItem="{Binding Type}"
                                  ItemsSource="{Binding EmulationModes}"
                                  ItemTemplate="{StaticResource EnumToStringTemplate}" />
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
            <DataTemplate />
        </netCore:OutputTemplateSelector>
        <netCore:OutputTemplateSelector x:Key="OutputHeaderTemplates">
            <DataTemplate DataType="{x:Type conversions:AnalogToDigital}">
                <StackPanel>
                    <ComboBox HorizontalAlignment="Stretch" Margin="20 20 20 0"
                              SelectedItem="{Binding AnalogToDigitalType}"
                              ItemTemplate="{StaticResource EnumToStringTemplate}"
                              ItemsSource="{Binding AnalogToDigitalTypes}" />
                    <NumericUpDown FormatString="{}{0:#,0}" Value="{Binding Threshold}" VerticalAlignment="Center" />
                    <ContentControl Content="{Binding Child}"
                                    ContentTemplate="{StaticResource OutputHeaderTemplates}" />
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type combined:DjCombinedOutput}">
                <StackPanel Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding DetectedLeft}" IsEnabled="False" VerticalAlignment="Center">Left Turntable Found</CheckBox>
                    <CheckBox IsChecked="{Binding DetectedRight}" IsEnabled="False" VerticalAlignment="Center">Right Turntable Found</CheckBox>
                </StackPanel>
            </DataTemplate>

            <DataTemplate DataType="{x:Type combined:UsbHostCombinedOutput}">
                <StackPanel Orientation="Horizontal">
                    <Label Content="{Binding ConnectedDevices}" VerticalAlignment="Center" />
                    <Label VerticalAlignment="Center">Devices connected</Label>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type combined:Gh5CombinedOutput}">
                <StackPanel Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding Detected}" VerticalAlignment="Center" IsEnabled="False">Detected</CheckBox>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type output:BluetoothOutput}">
                <StackPanel Orientation="Horizontal">
                    <CheckBox IsChecked="{Binding Connected}" VerticalAlignment="Center" IsEnabled="False">Connected to Transmitter</CheckBox>
                    <Label VerticalAlignment="Center">Local Address</Label>
                    <Label Content="{Binding LocalAddress}" VerticalAlignment="Center" />
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type combined:GhwtCombinedOutput}" />
            <DataTemplate DataType="{x:Type combined:Ps2CombinedOutput}">
                <StackPanel Orientation="Horizontal">
                    <StackPanel Orientation="Horizontal" IsVisible="{Binding ControllerFound}">
                        <Label VerticalAlignment="Center" VerticalContentAlignment="Center"
                               Content="Current Controller Type: " />
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center"
                                   Text="{Binding DetectedType}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" IsVisible="{Binding !ControllerFound}">
                        <Label VerticalAlignment="Center" VerticalContentAlignment="Center">No Controller Found</Label>
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type combined:WiiCombinedOutput}">
                <StackPanel Orientation="Horizontal">
                    <StackPanel Orientation="Horizontal" IsVisible="{Binding ControllerFound}">
                        <Label VerticalAlignment="Center" VerticalContentAlignment="Center"
                               Content="Current Extension: " />
                        <TextBlock IsVisible="{Binding !IsGuitar}" VerticalAlignment="Center"
                                   HorizontalAlignment="Center"
                                   Text="{Binding DetectedType, Converter={StaticResource EnumToStringConverter}}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" IsVisible="{Binding !ControllerFound}">
                        <Label VerticalAlignment="Center" VerticalContentAlignment="Center">No Extension Found</Label>
                    </StackPanel>
                </StackPanel>
            </DataTemplate>

            <DataTemplate DataType="{x:Type output:DjAxis}">
                <StackPanel Orientation="Horizontal">
                    <Grid>
                        <StackPanel Orientation="Horizontal" Width="{Binding FullProgressWidth, Mode=OneTime}">
                            <ProgressBar CornerRadius="0 3 3 0" HorizontalAlignment="Stretch"
                                         Value="{Binding ValueLower}"
                                         IsIndeterminate="False" Minimum="0" Maximum="32768"
                                         Height="30"
                                         Width="{Binding HalfProgressWidth, Mode=OneTime}">
                                <ProgressBar.RenderTransform>
                                    <ScaleTransform ScaleX="-1" />
                                </ProgressBar.RenderTransform>
                            </ProgressBar>
                            <ProgressBar CornerRadius="0 3 3 0" HorizontalAlignment="Stretch"
                                         Value="{Binding ValueUpper}"
                                         IsIndeterminate="False" Minimum="0" Maximum="32768"
                                         Height="30"
                                         Width="{Binding HalfProgressWidth, Mode=OneTime}" />
                        </StackPanel>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center"
                                   Text="{Binding Value}" />
                    </Grid>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type output:GuitarAxis}">
                <StackPanel Orientation="Horizontal" IsVisible="{Binding !IsDigitalToAnalog}">
                    <StackPanel Orientation="Vertical" VerticalAlignment="Center" IsVisible="{Binding !HasNamedAxis}">
                        <Grid>
                            <StackPanel Orientation="Horizontal" IsVisible="{Binding Trigger}">
                                <ProgressBar Value="{Binding Value}"
                                             IsIndeterminate="False" Minimum="0" Maximum="65536"
                                             Height="30"
                                             Width="{Binding FullProgressWidth, Mode=OneTime}" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" IsVisible="{Binding !Trigger}"
                                        Width="{Binding FullProgressWidth, Mode=OneTime}">
                                <ProgressBar CornerRadius="0 3 3 0"
                                             Value="{Binding ValueLower}"
                                             IsIndeterminate="False" Minimum="0" Maximum="32768"
                                             Height="30"
                                             Width="{Binding HalfProgressWidth, Mode=OneTime}">
                                    <ProgressBar.RenderTransform>
                                        <ScaleTransform ScaleX="-1" />
                                    </ProgressBar.RenderTransform>
                                </ProgressBar>
                                <ProgressBar CornerRadius="0 3 3 0"
                                             Value="{Binding ValueUpper}"
                                             IsIndeterminate="False" Minimum="0" Maximum="32768"
                                             Height="30"
                                             Width="{Binding HalfProgressWidth, Mode=OneTime}" />
                            </StackPanel>
                            <Label VerticalAlignment="Center" HorizontalContentAlignment="Center"
                                   Content="{Binding Value}" Width="{Binding FullProgressWidth, Mode=OneTime}" />
                        </Grid>
                    </StackPanel>
                    <TextBlock IsVisible="{Binding HasNamedAxis}" VerticalAlignment="Center" HorizontalAlignment="Center"
                               Text="{Binding NamedAxisInfo}" />
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type output:OutputAxis}">
                <StackPanel Orientation="Horizontal" IsVisible="{Binding !IsDigitalToAnalog}">
                    <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                        <Grid>
                            <StackPanel Orientation="Horizontal" IsVisible="{Binding Trigger}">
                                <ProgressBar Value="{Binding Value}"
                                             IsIndeterminate="False" Minimum="0" Maximum="65536"
                                             Height="30"
                                             Width="{Binding FullProgressWidth, Mode=OneTime}" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" IsVisible="{Binding !Trigger}"
                                        Width="{Binding FullProgressWidth, Mode=OneTime}">
                                <ProgressBar CornerRadius="0 3 3 0"
                                             Value="{Binding ValueLower}"
                                             IsIndeterminate="False" Minimum="0" Maximum="32768"
                                             Height="30"
                                             Width="{Binding HalfProgressWidth, Mode=OneTime}">
                                    <ProgressBar.RenderTransform>
                                        <ScaleTransform ScaleX="-1" />
                                    </ProgressBar.RenderTransform>
                                </ProgressBar>
                                <ProgressBar CornerRadius="0 3 3 0"
                                             Value="{Binding ValueUpper}"
                                             IsIndeterminate="False" Minimum="0" Maximum="32768"
                                             Height="30"
                                             Width="{Binding HalfProgressWidth, Mode=OneTime}" />
                            </StackPanel>
                            <Label VerticalAlignment="Center" HorizontalContentAlignment="Center"
                                   Content="{Binding Value}" Width="{Binding FullProgressWidth, Mode=OneTime}" />
                        </Grid>
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type output:OutputButton}" />
            <DataTemplate />
        </netCore:OutputTemplateSelector>
        <netCore:OutputTemplateSelector x:Key="EmptySelector">
            <DataTemplate DataType="{x:Type output:EmptyOutput}">
                <StackPanel IsVisible="{Binding IsEmpty}" Background="Black" MinHeight="75"
                            x:DataType="output:EmptyOutput">
                    <WrapPanel Margin="20 20 20 0">
                        <ContentControl ContentTemplate="{StaticResource ImageOutputTemplate}"
                                        Content="{Binding }" />
                        <Label IsVisible="{Binding IsKeyboard}"
                               Content="{Binding LocalisedName}" />
                        <StackPanel Orientation="Horizontal">
                            <StackPanel Orientation="Horizontal" IsVisible="{Binding IsController}">
                                <ComboBox VerticalAlignment="Center"
                                          SelectedItem="{Binding CombinedType}"
                                          ItemsSource="{Binding CombinedTypes}"
                                          ItemTemplate="{StaticResource ImageWithTextTemplate}" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" IsVisible="{Binding IsKeyboard}">
                                <ComboBox VerticalAlignment="Center"
                                          SelectedItem="{Binding MouseAxisType}"
                                          ItemsSource="{Binding MouseAxisTypes}"
                                          ItemTemplate="{StaticResource ControllerEnumTemplate}" />
                                <ComboBox VerticalAlignment="Center"
                                          SelectedItem="{Binding MouseButtonType}"
                                          ItemsSource="{Binding MouseButtonTypes}"
                                          ItemTemplate="{StaticResource ControllerEnumTemplate}" />
                                <ComboBox VerticalAlignment="Center" SelectedItem="{Binding Key}"
                                          ItemsSource="{Binding Keys}"
                                          ItemTemplate="{StaticResource ControllerEnumTemplate}" />
                            </StackPanel>
                        </StackPanel>
                        <Button Command="{Binding RemoveCommand}">
                            Remove
                        </Button>
                    </WrapPanel>
                    <Label Foreground="Red" Margin="20 20 20 0"
                           Content="{Binding ErrorText}"
                           VerticalAlignment="Center" VerticalContentAlignment="Center"
                           IsVisible="{Binding ErrorText, Converter={x:Static ObjectConverters.IsNotNull}}" />
                </StackPanel>
            </DataTemplate>
        </netCore:OutputTemplateSelector>
        <netCore:OutputTemplateSelector x:Key="OutputTemplates">

            <DataTemplate DataType="{x:Type combined:UsbHostCombinedOutput}">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Connected devices
                        </Label>
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="200" Content="{Binding UsbHostInfo}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            D- (White) Pin
                        </Label>
                        <ComboBox HorizontalAlignment="Stretch"
                                  SelectedItem="{Binding UsbHostDm}"
                                  ItemsSource="{Binding AvailablePinsDm}"
                                  ItemTemplate="{StaticResource PinToStringTemplate}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            D+ (Green) Pin
                        </Label>
                        <ComboBox HorizontalAlignment="Stretch"
                                  SelectedItem="{Binding UsbHostDp}"
                                  ItemsSource="{Binding AvailablePinsDp}"
                                  ItemTemplate="{StaticResource PinToStringTemplate}" />
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type inputs:GhWtTapInput}">
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Vertical" IsVisible="{Binding !Combined}">
                        <StackPanel Orientation="Horizontal" IsVisible="{Binding !Combined}">
                            <Label VerticalAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Width="300">
                                Slider Bar Sensitivity
                            </Label>
                            <NumericUpDown FormatString="{}{0:#,0}" Value="{Binding Sensitivity}" Maximum="60"
                                           VerticalAlignment="Center"
                                           Width="200" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal"
                                    IsVisible="{Binding !$parent[UserControl].((viewModels:ConfigViewModel)DataContext).IsRetailMode}">
                            <Label VerticalAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Width="300">
                                Slider Analog Input Pin
                            </Label>
                            <ComboBox VerticalAlignment="Center"
                                      SelectedItem="{Binding Pin}"
                                      ItemsSource="{Binding AvailablePins}"
                                      ItemTemplate="{StaticResource PinToStringTemplate}"
                                      Width="200" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal"
                                    IsVisible="{Binding !$parent[UserControl].((viewModels:ConfigViewModel)DataContext).IsRetailMode}">
                            <Label VerticalAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Width="300">
                                Slider S0 Pin
                            </Label>
                            <ComboBox VerticalAlignment="Center"
                                      SelectedItem="{Binding PinS0}"
                                      ItemsSource="{Binding AvailablePinsDigital}"
                                      ItemTemplate="{StaticResource PinToStringTemplate}"
                                      Width="200" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal"
                                    IsVisible="{Binding !$parent[UserControl].((viewModels:ConfigViewModel)DataContext).IsRetailMode}">
                            <Label VerticalAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Width="300">
                                Slider S1 Pin
                            </Label>
                            <ComboBox VerticalAlignment="Center"
                                      SelectedItem="{Binding PinS1}"
                                      ItemsSource="{Binding AvailablePinsDigital}"
                                      ItemTemplate="{StaticResource PinToStringTemplate}"
                                      Width="200" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal"
                                    IsVisible="{Binding !$parent[UserControl].((viewModels:ConfigViewModel)DataContext).IsRetailMode}">
                            <Label VerticalAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Width="300">
                                Slider S2 Pin
                            </Label>
                            <ComboBox VerticalAlignment="Center"
                                      SelectedItem="{Binding PinS2}"
                                      ItemsSource="{Binding AvailablePinsDigital}"
                                      ItemTemplate="{StaticResource PinToStringTemplate}"
                                      Width="200" />
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type inputs:Gh5NeckInput}">
                <StackPanel Orientation="Vertical"
                            IsVisible="{Binding !$parent[UserControl].((viewModels:ConfigViewModel)DataContext).IsRetailMode}">
                    <StackPanel IsVisible="{Binding BindableTwi}" Orientation="Horizontal">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            SCL (Labelled as CLK or C) Pin
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  SelectedItem="{Binding Scl}"
                                  ItemsSource="{Binding AvailableSclPins}"
                                  ItemTemplate="{StaticResource PinToStringTemplate}"
                                  Width="200" />
                    </StackPanel>
                    <StackPanel IsVisible="{Binding BindableTwi}" Orientation="Horizontal">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            SDA (Labelled as Data or D) Pin
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  SelectedItem="{Binding Sda}"
                                  ItemsSource="{Binding AvailableSdaPins}"
                                  ItemTemplate="{StaticResource PinToStringTemplate}"
                                  Width="200" />
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type other:Led}">
                <StackPanel
                    IsVisible="{Binding !$parent[UserControl].((viewModels:ConfigViewModel)DataContext).IsRetailMode}">
                    <StackPanel Orientation="Horizontal" IsVisible="{Binding IsLed}">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Led
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  SelectedItem="{Binding Command}"
                                  ItemsSource="{Binding RumbleCommands}"
                                  ItemTemplate="{StaticResource EnumToStringTemplate}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" IsVisible="{Binding StageKitMode}">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Stage Kit Command
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  SelectedItem="{Binding StageKitCommand}"
                                  ItemTemplate="{StaticResource EnumToStringTemplate}"
                                  ItemsSource="{Binding StageKitCommands}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" IsVisible="{Binding FiveFretMode}">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Guitar Input
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  SelectedItem="{Binding FiveFretGuitar}"
                                  ItemTemplate="{StaticResource EnumToStringTemplate}"
                                  ItemsSource="{Binding FiveFretGuitars}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" IsVisible="{Binding SixFretMode}">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Live Guitar Input
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  SelectedItem="{Binding SixFretGuitar}"
                                  ItemTemplate="{StaticResource EnumToStringTemplate}"
                                  ItemsSource="{Binding SixFretGuitars}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" IsVisible="{Binding RockBandDrumsMode}">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Drum Input
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  SelectedItem="{Binding RockBandDrum}"
                                  ItemTemplate="{StaticResource EnumToStringTemplate}"
                                  ItemsSource="{Binding RockBandDrums}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" IsVisible="{Binding GuitarHeroDrumsMode}">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Drum Input
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  SelectedItem="{Binding GuitarHeroDrum}"
                                  ItemTemplate="{StaticResource EnumToStringTemplate}"
                                  ItemsSource="{Binding GuitarHeroDrums}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" IsVisible="{Binding TurntableMode}">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Turntable Input
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  SelectedItem="{Binding Turntable}"
                                  ItemTemplate="{StaticResource EnumToStringTemplate}"
                                  ItemsSource="{Binding Turntables}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" IsVisible="{Binding StageKitStrobeSpeedMode}">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Strobe Speed
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  SelectedItem="{Binding StrobeSpeed}"
                                  ItemTemplate="{StaticResource EnumToStringTemplate}"
                                  ItemsSource="{Binding StageKitStrobeSpeeds}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" IsVisible="{Binding StageKitLedMode}">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Led
                        </Label>
                        <NumericUpDown FormatString="{}{0:#,0}" Value="{Binding StageKitLed}" Minimum="1"
                                       Maximum="8" Width="200" Height="30" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" IsVisible="{Binding PlayerMode}">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Player
                        </Label>
                        <NumericUpDown FormatString="{}{0:#,0}" Value="{Binding Player}" Minimum="1"
                                       Maximum="4" Width="200" Height="30" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" IsVisible="{Binding ComboMode}">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Combo
                        </Label>
                        <NumericUpDown FormatString="{}{0:#,0}" Value="{Binding Combo}" Minimum="1"
                                       Maximum="244" Width="200" Height="30" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" IsVisible="{Binding LedsRequireColours}">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Enable Digital Output
                        </Label>
                        <ToggleSwitch IsChecked="{Binding OutputEnabled}" OnContent="Enabled"
                                      OffContent="Disabled" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" IsVisible="{Binding OutputEnabled}">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Invert
                        </Label>
                        <ToggleSwitch IsChecked="{Binding Inverted}" />
                    </StackPanel>
                    <StackPanel IsVisible="{Binding UsesPwm}">
                        <StackPanel Orientation="Horizontal" IsVisible="{Binding OutputEnabled}">
                            <Label VerticalAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Width="300">
                                Analog Output Pin
                            </Label>
                            <ComboBox VerticalAlignment="Center"
                                      SelectedItem="{Binding Pin}"
                                      ItemTemplate="{StaticResource PinToStringTemplate}"
                                      ItemsSource="{Binding AvailablePwmPins}" />
                        </StackPanel>
                    </StackPanel>
                    <StackPanel IsVisible="{Binding !UsesPwm}">
                        <StackPanel Orientation="Horizontal" IsVisible="{Binding OutputEnabled}">
                            <Label VerticalAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Width="300">
                                Digital Output Pin
                            </Label>
                            <ComboBox VerticalAlignment="Center"
                                      SelectedItem="{Binding Pin}"
                                      ItemTemplate="{StaticResource PinToStringTemplate}"
                                      ItemsSource="{Binding AvailablePins}" />
                        </StackPanel>
                    </StackPanel>

                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type other:Rumble}">
                <StackPanel
                    IsVisible="{Binding !$parent[UserControl].((viewModels:ConfigViewModel)DataContext).IsRetailMode}">
                    <StackPanel Orientation="Horizontal">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Motor
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  SelectedItem="{Binding RumbleMotorType}"
                                  ItemsSource="{Binding RumbleMotorTypes}"
                                  ItemTemplate="{StaticResource EnumToStringTemplate}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Motor Driver Pin
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  SelectedItem="{Binding Pin}"
                                  ItemTemplate="{StaticResource PinToStringTemplate}"
                                  ItemsSource="{Binding AvailablePins}" />
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type inputs:DjInput}">
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Vertical"
                                IsVisible="{Binding !$parent[UserControl].((viewModels:ConfigViewModel)DataContext).IsRetailMode}">
                        <StackPanel IsVisible="{Binding BindableTwi}" Orientation="Horizontal">
                            <Label VerticalAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Width="300">
                                SCL Pin
                            </Label>
                            <ComboBox VerticalAlignment="Center"
                                      SelectedItem="{Binding Scl}"
                                      ItemsSource="{Binding AvailableSclPins}"
                                      ItemTemplate="{StaticResource PinToStringTemplate}"
                                      Width="200" />
                        </StackPanel>
                        <StackPanel IsVisible="{Binding BindableTwi}" Orientation="Horizontal">
                            <Label VerticalAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Width="300">
                                SDA Pin
                            </Label>
                            <ComboBox VerticalAlignment="Center"
                                      SelectedItem="{Binding Sda}"
                                      ItemsSource="{Binding AvailableSdaPins}"
                                      ItemTemplate="{StaticResource PinToStringTemplate}"
                                      Width="200" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" IsVisible="{Binding IsAnalog}">
                            <Label VerticalAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Width="300">
                                Turntable Smoothing
                            </Label>
                            <ToggleSwitch IsEnabled="{Binding !Dual}" IsChecked="{Binding Smoothing}" OnContent="Enabled"
                                          OffContent="Disabled" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" IsVisible="{Binding IsAnalog}">
                            <Label VerticalAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Width="300">
                                Dual Turntable Smoothing
                            </Label>
                            <ToggleSwitch IsChecked="{Binding Dual}" OnContent="Enabled"
                                          OffContent="Disabled" />
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" IsVisible="{Binding !Combined}">
                            <Label VerticalAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Width="300">
                                Turntable Poll Rate
                            </Label>
                            <NumericUpDown FormatString="{}{0:#,0}" Value="{Binding PollRate}" Minimum="1"
                                           Maximum="10" Width="200" Height="30" />
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
            </DataTemplate>

            <DataTemplate DataType="{x:Type inputs:UsbHostInput}">
                <StackPanel Orientation="Vertical" IsVisible="{Binding !Combined}">
                    <StackPanel Orientation="Horizontal">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Connected devices
                        </Label>
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="200" Content="{Binding UsbHostInfo}" />
                    </StackPanel>
                    <StackPanel IsVisible="{Binding !Combined}" Orientation="Horizontal">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            D- (White) Pin
                        </Label>
                        <ComboBox HorizontalAlignment="Stretch"
                                  SelectedItem="{Binding UsbHostDm}"
                                  ItemsSource="{Binding AvailablePinsDm}"
                                  ItemTemplate="{StaticResource PinToStringTemplate}" />
                    </StackPanel>
                    <StackPanel IsVisible="{Binding !Combined}" Orientation="Horizontal">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            D+ (Green) Pin
                        </Label>
                        <ComboBox HorizontalAlignment="Stretch"
                                  SelectedItem="{Binding UsbHostDp}"
                                  ItemsSource="{Binding AvailablePinsDp}"
                                  ItemTemplate="{StaticResource PinToStringTemplate}" />
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type inputs:Ps2Input}">
                <StackPanel Orientation="Vertical"
                            IsVisible="{Binding !$parent[UserControl].((viewModels:ConfigViewModel)DataContext).IsRetailMode}">
                    <StackPanel IsVisible="{Binding BindableSpi}" Orientation="Horizontal">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            MOSI / Command (Orange) Pin
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  SelectedItem="{Binding Mosi}"
                                  ItemsSource="{Binding AvailableMosiPins}"
                                  ItemTemplate="{StaticResource PinToStringTemplate}"
                                  Width="200" />
                    </StackPanel>

                    <StackPanel IsVisible="{Binding BindableSpi}" Orientation="Horizontal">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            MISO / Data (Brown) Pin
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  SelectedItem="{Binding Miso}"
                                  ItemsSource="{Binding AvailableMisoPins}"
                                  ItemTemplate="{StaticResource PinToStringTemplate}"
                                  Width="200" />
                    </StackPanel>

                    <StackPanel IsVisible="{Binding BindableSpi}" Orientation="Horizontal">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Sck / Clock (Blue) Pin
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  SelectedItem="{Binding Sck}"
                                  ItemsSource="{Binding AvailableSckPins}"
                                  ItemTemplate="{StaticResource PinToStringTemplate}"
                                  Width="200" />
                    </StackPanel>

                    <StackPanel IsVisible="{Binding !Combined}" Orientation="Horizontal">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Acknowledge (Green) Pin
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  SelectedItem="{Binding Ack}"
                                  ItemsSource="{Binding AvailablePins}"
                                  ItemTemplate="{StaticResource PinToStringTemplate}"
                                  Width="200" />
                    </StackPanel>

                    <StackPanel IsVisible="{Binding !Combined}" Orientation="Horizontal">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Attention (Yellow) Pin
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  SelectedItem="{Binding Att}"
                                  ItemsSource="{Binding AvailablePins}"
                                  ItemTemplate="{StaticResource PinToStringTemplate}"
                                  Width="200" />
                    </StackPanel>
                </StackPanel>
            </DataTemplate>

            <DataTemplate DataType="{x:Type other:JoystickToDpad}">
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal">
                        <Label VerticalAlignment="Center" Width="300">
                            Threshold
                        </Label>
                        <NumericUpDown FormatString="{}{0:#,0}" Value="{Binding Threshold}" Minimum="1"
                                       Maximum="32767" Width="200" Height="30" />
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type inputs:WiiInput}">
                <StackPanel Orientation="Vertical"
                            IsVisible="{Binding !$parent[UserControl].((viewModels:ConfigViewModel)DataContext).IsRetailMode}">
                    <StackPanel IsVisible="{Binding BindableTwi}" Orientation="Horizontal">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            SCL Pin
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  SelectedItem="{Binding Scl}"
                                  ItemsSource="{Binding AvailableSclPins}"
                                  ItemTemplate="{StaticResource PinToStringTemplate}"
                                  Width="200" />
                    </StackPanel>
                    <StackPanel IsVisible="{Binding BindableTwi}" Orientation="Horizontal">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            SDA Pin
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  SelectedItem="{Binding Sda}"
                                  ItemsSource="{Binding AvailableSdaPins}"
                                  ItemTemplate="{StaticResource PinToStringTemplate}"
                                  Width="200" />
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type inputs:MultiplexerInput}">
                <StackPanel Orientation="Vertical"
                            IsVisible="{Binding !$parent[UserControl].((viewModels:ConfigViewModel)DataContext).IsRetailMode}">
                    <StackPanel Orientation="Horizontal">
                        <Label VerticalAlignment="Center" Width="300">Analog Pin</Label>
                        <ComboBox VerticalAlignment="Center" SelectedItem="{Binding Pin}"
                                  ItemsSource="{Binding AvailablePins}"
                                  ItemTemplate="{StaticResource PinToStringTemplate}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" IsVisible="{Binding IsSixteenChannel}">
                        <Label VerticalAlignment="Center" Width="300">Channel</Label>
                        <NumericUpDown FormatString="{}{0:#,0}" Value="{Binding Channel}" Minimum="0"
                                       Maximum="15" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" IsVisible="{Binding !IsSixteenChannel}">
                        <Label VerticalAlignment="Center" Width="300">Channel</Label>
                        <NumericUpDown FormatString="{}{0:#,0}" Value="{Binding Channel}" Minimum="0"
                                       Maximum="8" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label VerticalAlignment="Center" Width="300">Multiplexer Type</Label>
                        <ComboBox VerticalAlignment="Center" SelectedItem="{Binding MultiplexerType}"
                                  ItemsSource="{Binding MultiplexerTypes}"
                                  ItemTemplate="{StaticResource EnumToStringTemplate}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label VerticalAlignment="Center" Width="300">S0 Pin</Label>
                        <ComboBox VerticalAlignment="Center" SelectedItem="{Binding PinS0}"
                                  ItemsSource="{Binding AvailableDigitalPins}"
                                  ItemTemplate="{StaticResource PinToStringTemplate}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label VerticalAlignment="Center" Width="300">S1 Pin</Label>
                        <ComboBox VerticalAlignment="Center" SelectedItem="{Binding PinS1}"
                                  ItemsSource="{Binding AvailableDigitalPins}"
                                  ItemTemplate="{StaticResource PinToStringTemplate}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label VerticalAlignment="Center" Width="300">S2 Pin</Label>
                        <ComboBox VerticalAlignment="Center" SelectedItem="{Binding PinS2}"
                                  ItemsSource="{Binding AvailableDigitalPins}"
                                  ItemTemplate="{StaticResource PinToStringTemplate}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" IsVisible="{Binding IsSixteenChannel}">
                        <Label VerticalAlignment="Center" Width="300">S3 Pin</Label>
                        <ComboBox VerticalAlignment="Center" SelectedItem="{Binding PinS3}"
                                  ItemsSource="{Binding AvailableDigitalPins}"
                                  ItemTemplate="{StaticResource PinToStringTemplate}" />
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type inputs:DirectInput}">
                <StackPanel Orientation="Vertical"
                            IsVisible="{Binding !$parent[UserControl].((viewModels:ConfigViewModel)DataContext).IsRetailMode}">
                    <StackPanel
                        IsVisible="{Binding $parent[UserControl].((viewModels:ConfigViewModel)DataContext).IsAdvancedMode}">
                        <StackPanel Orientation="Horizontal" IsVisible="{Binding !IsAnalog}">
                            <Label VerticalAlignment="Center" Width="300">Pin Mode</Label>
                            <ComboBox VerticalAlignment="Center" SelectedItem="{Binding PinMode}"
                                      ItemsSource="{Binding DevicePinModes}" />
                        </StackPanel>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label VerticalAlignment="Center" Width="300">Pin</Label>
                        <ComboBox VerticalAlignment="Center" SelectedItem="{Binding Pin}"
                                  ItemsSource="{Binding AvailablePins}"
                                  ItemTemplate="{StaticResource PinToStringTemplate}" />
                        <Button Command="{Binding DetectPinCommand}" Content="{Binding PinConfigText}" />
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" IsVisible="{Binding !IsAnalog}">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Invert
                        </Label>
                        <ToggleSwitch IsChecked="{Binding Inverted}" />
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type output:DjAxis}">
                <StackPanel Orientation="Vertical">
                    <Panel>
                        <StackPanel Orientation="Vertical" VerticalAlignment="Center"
                                    IsVisible="{Binding IsEffectsKnob}">
                            <StackPanel Orientation="Horizontal">
                                <Label VerticalAlignment="Center" Width="300">
                                    Current Value
                                </Label>
                                <Grid>
                                    <StackPanel Orientation="Horizontal"
                                                Width="{Binding FullProgressWidth, Mode=OneTime}">
                                        <ProgressBar CornerRadius="0 3 3 0"
                                                     Value="{Binding ValueLower}"
                                                     IsIndeterminate="False" Minimum="0" Maximum="32768"
                                                     Height="30"
                                                     Width="{Binding HalfProgressWidth, Mode=OneTime}">
                                            <ProgressBar.RenderTransform>
                                                <ScaleTransform ScaleX="-1" />
                                            </ProgressBar.RenderTransform>
                                        </ProgressBar>
                                        <ProgressBar CornerRadius="0 3 3 0"
                                                     Value="{Binding ValueUpper}"
                                                     IsIndeterminate="False" Minimum="0" Maximum="32768"
                                                     Height="30"
                                                     Width="{Binding HalfProgressWidth, Mode=OneTime}" />
                                    </StackPanel>
                                    <Label VerticalAlignment="Center" HorizontalContentAlignment="Center"
                                           Content="{Binding Value}" />
                                </Grid>

                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Height="50">
                                <Label VerticalAlignment="Center" Width="300">
                                    Invert
                                </Label>

                                <ToggleSwitch IsChecked="{Binding Invert}" />
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Orientation="Vertical" VerticalAlignment="Center" IsVisible="{Binding IsVelocity}">
                            <StackPanel Orientation="Horizontal">
                                <Label VerticalAlignment="Center" Width="300">
                                    Current Value
                                </Label>
                                <Grid>
                                    <StackPanel Orientation="Horizontal"
                                                Width="{Binding FullProgressWidth, Mode=OneTime}">
                                        <ProgressBar CornerRadius="0 3 3 0"
                                                     Value="{Binding ValueLower}"
                                                     IsIndeterminate="False" Minimum="0" Maximum="32768"
                                                     Height="30"
                                                     Width="{Binding HalfProgressWidth, Mode=OneTime}">
                                            <ProgressBar.RenderTransform>
                                                <ScaleTransform ScaleX="-1" />
                                            </ProgressBar.RenderTransform>
                                        </ProgressBar>
                                        <ProgressBar CornerRadius="0 3 3 0"
                                                     Value="{Binding ValueUpper}"
                                                     IsIndeterminate="False" Minimum="0" Maximum="32768"
                                                     Height="30"
                                                     Width="{Binding HalfProgressWidth, Mode=OneTime}" />
                                    </StackPanel>
                                    <Label VerticalAlignment="Center" HorizontalContentAlignment="Center"
                                           Content="{Binding Value}" />
                                </Grid>

                            </StackPanel>
                            <StackPanel Orientation="Horizontal" Height="50">
                                <Label VerticalAlignment="Center" Width="300">
                                    Multiplier
                                </Label>
                                <Slider Value="{Binding Multiplier}"
                                        Minimum="1"
                                        Maximum="10"
                                        IsSnapToTickEnabled="True"
                                        TickFrequency="1" Width="240" />
                                <NumericUpDown FormatString="{}{0:#,0}" Value="{Binding Multiplier}" Minimum="1"
                                               Maximum="10" Width="150" Height="30" Margin="10 0 0 0 " />
                            </StackPanel>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" IsVisible="{Binding IsFader}">
                            <StackPanel Orientation="Horizontal" IsVisible="{Binding !IsDigitalToAnalog}">
                                <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                    <StackPanel Orientation="Horizontal">
                                        <Label VerticalAlignment="Center" Width="300">
                                            Calibrated Value
                                        </Label>
                                        <Grid>
                                            <StackPanel Orientation="Horizontal" IsVisible="{Binding Trigger}">
                                                <ProgressBar Value="{Binding Value}"
                                                             IsIndeterminate="False" Minimum="0" Maximum="65536"
                                                             Height="30"
                                                             Width="{Binding FullProgressWidth, Mode=OneTime}" />
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal" IsVisible="{Binding !Trigger}"
                                                        Width="{Binding FullProgressWidth, Mode=OneTime}">
                                                <ProgressBar CornerRadius="0 3 3 0"
                                                             Value="{Binding ValueLower}"
                                                             IsIndeterminate="False" Minimum="0" Maximum="32768"
                                                             Height="30"
                                                             Width="{Binding HalfProgressWidth, Mode=OneTime}">
                                                    <ProgressBar.RenderTransform>
                                                        <ScaleTransform ScaleX="-1" />
                                                    </ProgressBar.RenderTransform>
                                                </ProgressBar>
                                                <ProgressBar CornerRadius="0 3 3 0"
                                                             Value="{Binding ValueUpper}"
                                                             IsIndeterminate="False" Minimum="0" Maximum="32768"
                                                             Height="30"
                                                             Width="{Binding HalfProgressWidth, Mode=OneTime}" />
                                            </StackPanel>
                                            <Label VerticalAlignment="Center" HorizontalContentAlignment="Center"
                                                   Content="{Binding Value}"
                                                   Width="{Binding FullProgressWidth, Mode=OneTime}" />
                                        </Grid>
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal">
                                        <Label VerticalAlignment="Center" Width="300">
                                            Original Value
                                        </Label>
                                        <Grid>
                                            <Rectangle Margin="{Binding CalibrationMinMaxMargin}"
                                                       HorizontalAlignment="Stretch"
                                                       Fill="Green" Height="30" />
                                            <Rectangle Margin="{Binding ComputedDeadZoneMargin}" Fill="Red"
                                                       HorizontalAlignment="Stretch" Height="30" />
                                            <StackPanel Orientation="Horizontal" IsVisible="{Binding InputIsUint}">
                                                <ProgressBar Opacity="0.6"
                                                             Value="{Binding ValueRaw}"
                                                             IsIndeterminate="False" Minimum="0" Maximum="65536"
                                                             Height="30"
                                                             Width="{Binding FullProgressWidth, Mode=OneTime}" />
                                            </StackPanel>
                                            <StackPanel Orientation="Horizontal" IsVisible="{Binding !InputIsUint}"
                                                        Width="{Binding FullProgressWidth, Mode=OneTime}">
                                                <ProgressBar Opacity="0.6" CornerRadius="0 3 3 0"
                                                             Value="{Binding ValueRawLower}"
                                                             IsIndeterminate="False" Minimum="0" Maximum="32768"
                                                             Height="30"
                                                             Width="{Binding HalfProgressWidth, Mode=OneTime}">
                                                    <ProgressBar.RenderTransform>
                                                        <ScaleTransform ScaleX="-1" />
                                                    </ProgressBar.RenderTransform>
                                                </ProgressBar>
                                                <ProgressBar Opacity="0.6" CornerRadius="0 3 3 0"
                                                             Value="{Binding ValueRawUpper}"
                                                             IsIndeterminate="False" Minimum="0" Maximum="32768"
                                                             Height="30"
                                                             Width="{Binding HalfProgressWidth, Mode=OneTime}" />
                                            </StackPanel>
                                            <Label VerticalAlignment="Center" HorizontalAlignment="Center"
                                                   HorizontalContentAlignment="Center"
                                                   Content="{Binding ValueRaw}"
                                                   Width="{Binding FullProgressWidth, Mode=OneTime}" />
                                        </Grid>
                                    </StackPanel>


                                    <Label Margin="300 0 0 0"
                                           Width="{Binding FullProgressWidth, Mode=OneTime}"
                                           IsVisible="{Binding CalibrationText, Converter={x:Static ObjectConverters.IsNotNull}}"
                                           HorizontalContentAlignment="Center"
                                           Content="{Binding CalibrationText}" />
                                </StackPanel>

                            </StackPanel>
                        </StackPanel>
                    </Panel>

                    <StackPanel IsVisible="{Binding SupportsMinMax}" Orientation="Horizontal" Height="50">
                        <Label VerticalAlignment="Center" Width="300">
                            Calibrate
                        </Label>
                        <Button Command="{Binding CalibrateCommand}"
                                HorizontalContentAlignment="Center" VerticalAlignment="Bottom" Width="100">
                            Calibrate
                        </Button>
                    </StackPanel>

                    <StackPanel IsVisible="{Binding SupportsMinMax}" Orientation="Horizontal" Height="50">
                        <Label VerticalAlignment="Center" Width="300">
                            Min
                        </Label>
                        <Slider Foreground="White" VerticalAlignment="Center"
                                Width="{Binding FullProgressWidth, Mode=OneTime}" Height="50"
                                Minimum="{Binding SliderMin, Mode=OneTime}"
                                Maximum="{Binding SliderMax, Mode=OneTime}" Value="{Binding Min}">
                        </Slider>
                    </StackPanel>

                    <StackPanel IsVisible="{Binding SupportsMinMax}" Orientation="Horizontal" Height="50">
                        <Label VerticalAlignment="Center" Width="300">
                            Max
                        </Label>
                        <Slider Foreground="White" VerticalAlignment="Center"
                                Width="{Binding FullProgressWidth, Mode=OneTime}" Height="50"
                                Minimum="{Binding SliderMin, Mode=OneTime}"
                                Maximum="{Binding SliderMax, Mode=OneTime}" Value="{Binding Max}">
                        </Slider>
                    </StackPanel>

                    <StackPanel IsVisible="{Binding SupportsMinMax}" Orientation="Horizontal" Height="50">
                        <Label VerticalAlignment="Center" Width="300">
                            Deadzone
                        </Label>
                        <Slider Foreground="White" VerticalAlignment="Center"
                                Width="{Binding FullProgressWidth, Mode=OneTime}" Height="50"
                                Minimum="0"
                                Maximum="{Binding SliderMax, Mode=OneTime}" Value="{Binding DeadZone}">
                        </Slider>
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type output:GuitarAxis}">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.IsVisible>
                            <MultiBinding Converter="{x:Static BoolConverters.And}">
                                <Binding Path="ChildOfCombined" />
                                <Binding Path="HasNamedAxis" />
                            </MultiBinding>
                        </StackPanel.IsVisible>
                        <Label VerticalAlignment="Center" Width="300">
                            Current Frets
                        </Label>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center"
                                   Text="{Binding NamedAxisInfo}">
                        </TextBlock>
                    </StackPanel>
                    <StackPanel IsVisible="{Binding !HasNamedAxis}">
                        <StackPanel Orientation="Horizontal" IsVisible="{Binding !IsDigitalToAnalog}">
                            <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                <StackPanel Orientation="Horizontal">
                                    <Label VerticalAlignment="Center" Width="300">
                                        Calibrated Value
                                    </Label>
                                    <Grid>
                                        <StackPanel Orientation="Horizontal" IsVisible="{Binding Trigger}">
                                            <ProgressBar Value="{Binding Value}"
                                                         IsIndeterminate="False" Minimum="0" Maximum="65536"
                                                         Height="30"
                                                         Width="{Binding FullProgressWidth, Mode=OneTime}" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" IsVisible="{Binding !Trigger}"
                                                    Width="{Binding FullProgressWidth, Mode=OneTime}">
                                            <ProgressBar CornerRadius="0 3 3 0"
                                                         Value="{Binding ValueLower}"
                                                         IsIndeterminate="False" Minimum="0" Maximum="32768"
                                                         Height="30"
                                                         Width="{Binding HalfProgressWidth, Mode=OneTime}">
                                                <ProgressBar.RenderTransform>
                                                    <ScaleTransform ScaleX="-1" />
                                                </ProgressBar.RenderTransform>
                                            </ProgressBar>
                                            <ProgressBar CornerRadius="0 3 3 0"
                                                         Value="{Binding ValueUpper}"
                                                         IsIndeterminate="False" Minimum="0" Maximum="32768"
                                                         Height="30"
                                                         Width="{Binding HalfProgressWidth, Mode=OneTime}" />
                                        </StackPanel>
                                        <Label VerticalAlignment="Center" HorizontalContentAlignment="Center"
                                               Content="{Binding Value}"
                                               Width="{Binding FullProgressWidth, Mode=OneTime}" />
                                    </Grid>
                                </StackPanel>

                                <StackPanel Orientation="Horizontal">
                                    <Label VerticalAlignment="Center" Width="300">
                                        Original Value
                                    </Label>
                                    <Grid>
                                        <Rectangle Margin="{Binding CalibrationMinMaxMargin}"
                                                   HorizontalAlignment="Stretch"
                                                   Fill="Green" Height="30" />
                                        <Rectangle Margin="{Binding ComputedDeadZoneMargin}" Fill="Red"
                                                   HorizontalAlignment="Stretch" Height="30" />
                                        <StackPanel Orientation="Horizontal" IsVisible="{Binding InputIsUint}">
                                            <ProgressBar Opacity="0.6"
                                                         Value="{Binding ValueRaw}"
                                                         IsIndeterminate="False" Minimum="0" Maximum="65536"
                                                         Height="30"
                                                         Width="{Binding FullProgressWidth, Mode=OneTime}" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" IsVisible="{Binding !InputIsUint}"
                                                    Width="{Binding FullProgressWidth, Mode=OneTime}">
                                            <ProgressBar Opacity="0.6" CornerRadius="0 3 3 0"
                                                         Value="{Binding ValueRawLower}"
                                                         IsIndeterminate="False" Minimum="0" Maximum="32768"
                                                         Height="30"
                                                         Width="{Binding HalfProgressWidth, Mode=OneTime}">
                                                <ProgressBar.RenderTransform>
                                                    <ScaleTransform ScaleX="-1" />
                                                </ProgressBar.RenderTransform>
                                            </ProgressBar>
                                            <ProgressBar Opacity="0.6" CornerRadius="0 3 3 0"
                                                         Value="{Binding ValueRawUpper}"
                                                         IsIndeterminate="False" Minimum="0" Maximum="32768"
                                                         Height="30"
                                                         Width="{Binding HalfProgressWidth, Mode=OneTime}" />
                                        </StackPanel>
                                        <Label VerticalAlignment="Center" HorizontalAlignment="Center"
                                               HorizontalContentAlignment="Center"
                                               Content="{Binding ValueRaw}"
                                               Width="{Binding FullProgressWidth, Mode=OneTime}" />
                                    </Grid>
                                </StackPanel>

                                <Label Margin="300 0 0 0"
                                       Width="{Binding FullProgressWidth, Mode=OneTime}"
                                       IsVisible="{Binding CalibrationText, Converter={x:Static ObjectConverters.IsNotNull}}"
                                       HorizontalContentAlignment="Center"
                                       Content="{Binding CalibrationText}" />
                            </StackPanel>

                        </StackPanel>
                        <StackPanel IsVisible="{Binding !IsDigitalToAnalog}" Orientation="Horizontal" Height="50">
                            <Label VerticalAlignment="Center" Width="300">
                                Calibrate
                            </Label>
                            <Button Command="{Binding CalibrateCommand}"
                                    HorizontalContentAlignment="Center" VerticalAlignment="Bottom" Width="100">
                                Calibrate
                            </Button>
                        </StackPanel>

                        <StackPanel IsVisible="{Binding !IsDigitalToAnalog}" Orientation="Horizontal" Height="50">
                            <Label VerticalAlignment="Center" Width="300">
                                Min
                            </Label>
                            <Slider Foreground="White" VerticalAlignment="Center"
                                    Width="{Binding FullProgressWidth, Mode=OneTime}" Height="50"
                                    Minimum="{Binding SliderMin, Mode=OneTime}"
                                    Maximum="{Binding SliderMax, Mode=OneTime}" Value="{Binding Min}">
                            </Slider>
                        </StackPanel>

                        <StackPanel IsVisible="{Binding !IsDigitalToAnalog}" Orientation="Horizontal" Height="50">
                            <Label VerticalAlignment="Center" Width="300">
                                Max
                            </Label>
                            <Slider Foreground="White" VerticalAlignment="Center"
                                    Width="{Binding FullProgressWidth, Mode=OneTime}" Height="50"
                                    Minimum="{Binding SliderMin, Mode=OneTime}"
                                    Maximum="{Binding SliderMax, Mode=OneTime}" Value="{Binding Max}">
                            </Slider>
                        </StackPanel>

                        <StackPanel IsVisible="{Binding !IsDigitalToAnalog}" Orientation="Horizontal" Height="50">
                            <Label VerticalAlignment="Center" Width="300">
                                Deadzone
                            </Label>
                            <Slider Foreground="White" VerticalAlignment="Center"
                                    Width="{Binding FullProgressWidth, Mode=OneTime}" Height="50"
                                    Minimum="0"
                                    Maximum="{Binding SliderMax, Mode=OneTime}" Value="{Binding DeadZone}">
                            </Slider>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>

            </DataTemplate>
            <DataTemplate DataType="{x:Type output:DrumAxis}">
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal" IsVisible="{Binding !IsWii}">
                        <StackPanel Orientation="Horizontal" IsVisible="{Binding !IsDigitalToAnalog}">
                            <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                <StackPanel Orientation="Horizontal">
                                    <Label VerticalAlignment="Center" Width="300">
                                        Value
                                    </Label>
                                    <Grid>
                                        <Rectangle Margin="{Binding ComputedDrumMargin}" Fill="Red"
                                                   HorizontalAlignment="Stretch" Height="30" />
                                        <StackPanel Orientation="Horizontal" IsVisible="{Binding InputIsUint}">
                                            <ProgressBar Opacity="0.6"
                                                         Value="{Binding ValueRaw}"
                                                         IsIndeterminate="False" Minimum="0" Maximum="65536"
                                                         Height="30"
                                                         Width="{Binding FullProgressWidth, Mode=OneTime}" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" IsVisible="{Binding !InputIsUint}"
                                                    Width="{Binding FullProgressWidth, Mode=OneTime}">
                                            <ProgressBar Opacity="0.6" CornerRadius="0 3 3 0"
                                                         Value="{Binding ValueRawLower}"
                                                         IsIndeterminate="False" Minimum="0" Maximum="32768"
                                                         Height="30"
                                                         Width="{Binding HalfProgressWidth, Mode=OneTime}">
                                                <ProgressBar.RenderTransform>
                                                    <ScaleTransform ScaleX="-1" />
                                                </ProgressBar.RenderTransform>
                                            </ProgressBar>
                                            <ProgressBar Opacity="0.6" CornerRadius="0 3 3 0"
                                                         Value="{Binding ValueRawUpper}"
                                                         IsIndeterminate="False" Minimum="0" Maximum="32768"
                                                         Height="30"
                                                         Width="{Binding HalfProgressWidth, Mode=OneTime}" />
                                        </StackPanel>
                                        <Label VerticalAlignment="Center" HorizontalAlignment="Center"
                                               HorizontalContentAlignment="Center"
                                               Content="{Binding ValueRaw}"
                                               Width="{Binding FullProgressWidth, Mode=OneTime}" />
                                    </Grid>
                                </StackPanel>
                                <Label Margin="300 0 0 0"
                                       Width="{Binding FullProgressWidth, Mode=OneTime}"
                                       IsVisible="{Binding CalibrationText, Converter={x:Static ObjectConverters.IsNotNull}}"
                                       HorizontalContentAlignment="Center"
                                       Content="{Binding CalibrationText}" />
                            </StackPanel>

                        </StackPanel>
                        <StackPanel IsVisible="{Binding !IsDigitalToAnalog}" Orientation="Horizontal" Height="50">
                            <Label VerticalAlignment="Center" Width="300">
                                Calibrate
                            </Label>
                            <Button Command="{Binding CalibrateDrumsCommand}"
                                    HorizontalContentAlignment="Center" VerticalAlignment="Bottom" Width="100">
                                Calibrate
                            </Button>
                        </StackPanel>

                        <StackPanel IsVisible="{Binding !IsDigitalToAnalog}" Orientation="Horizontal" Height="50">
                            <Label VerticalAlignment="Center" Width="300">
                                Min
                            </Label>
                            <Slider Foreground="White" VerticalAlignment="Center"
                                    Width="{Binding FullProgressWidth, Mode=OneTime}" Height="50"
                                    Minimum="{Binding SliderMin, Mode=OneTime}"
                                    Maximum="{Binding SliderMax, Mode=OneTime}" Value="{Binding Min}">
                            </Slider>
                        </StackPanel>

                        <StackPanel IsVisible="{Binding !IsDigitalToAnalog}" Orientation="Horizontal" Height="50">
                            <Label VerticalAlignment="Center" Width="300">
                                Max
                            </Label>
                            <Slider Foreground="White" VerticalAlignment="Center"
                                    Width="{Binding FullProgressWidth, Mode=OneTime}" Height="50"
                                    Minimum="{Binding SliderMin, Mode=OneTime}"
                                    Maximum="{Binding SliderMax, Mode=OneTime}" Value="{Binding Max}">
                            </Slider>
                        </StackPanel>

                        <StackPanel IsVisible="{Binding !IsDigitalToAnalog}" Orientation="Horizontal" Height="50">
                            <Label VerticalAlignment="Center" Width="300">
                                Deadzone
                            </Label>
                            <Slider Foreground="White" VerticalAlignment="Center"
                                    Width="{Binding FullProgressWidth, Mode=OneTime}" Height="50"
                                    Minimum="0"
                                    Maximum="{Binding SliderMax, Mode=OneTime}" Value="{Binding DeadZone}">
                            </Slider>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type output:OutputAxis}">
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal" IsVisible="{Binding !IsDigitalToAnalog}">
                        <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                            <StackPanel Orientation="Horizontal">
                                <Label VerticalAlignment="Center" Width="300">
                                    Calibrated Value
                                </Label>
                                <Grid>
                                    <StackPanel Orientation="Horizontal" IsVisible="{Binding Trigger}">
                                        <ProgressBar Value="{Binding Value}"
                                                     IsIndeterminate="False" Minimum="0" Maximum="65536"
                                                     Height="30"
                                                     Width="{Binding FullProgressWidth, Mode=OneTime}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" IsVisible="{Binding !Trigger}"
                                                Width="{Binding FullProgressWidth, Mode=OneTime}">
                                        <ProgressBar CornerRadius="0 3 3 0"
                                                     Value="{Binding ValueLower}"
                                                     IsIndeterminate="False" Minimum="0" Maximum="32768"
                                                     Height="30"
                                                     Width="{Binding HalfProgressWidth, Mode=OneTime}">
                                            <ProgressBar.RenderTransform>
                                                <ScaleTransform ScaleX="-1" />
                                            </ProgressBar.RenderTransform>
                                        </ProgressBar>
                                        <ProgressBar CornerRadius="0 3 3 0"
                                                     Value="{Binding ValueUpper}"
                                                     IsIndeterminate="False" Minimum="0" Maximum="32768"
                                                     Height="30"
                                                     Width="{Binding HalfProgressWidth, Mode=OneTime}" />
                                    </StackPanel>
                                    <Label VerticalAlignment="Center" HorizontalContentAlignment="Center"
                                           Content="{Binding Value}" Width="{Binding FullProgressWidth, Mode=OneTime}" />
                                </Grid>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal">
                                <Label VerticalAlignment="Center" Width="300">
                                    Original Value
                                </Label>
                                <Grid>
                                    <Rectangle Margin="{Binding CalibrationMinMaxMargin}"
                                               HorizontalAlignment="Stretch"
                                               Fill="Green" Height="30" />
                                    <Rectangle Margin="{Binding ComputedDeadZoneMargin}" Fill="Red"
                                               HorizontalAlignment="Stretch" Height="30" />
                                    <StackPanel Orientation="Horizontal" IsVisible="{Binding InputIsUint}">
                                        <ProgressBar Opacity="0.6"
                                                     Value="{Binding ValueRaw}"
                                                     IsIndeterminate="False" Minimum="0" Maximum="65536"
                                                     Height="30"
                                                     Width="{Binding FullProgressWidth, Mode=OneTime}" />
                                    </StackPanel>
                                    <StackPanel Orientation="Horizontal" IsVisible="{Binding !InputIsUint}"
                                                Width="{Binding FullProgressWidth, Mode=OneTime}">
                                        <ProgressBar Opacity="0.6" CornerRadius="0 3 3 0"
                                                     Value="{Binding ValueRawLower}"
                                                     IsIndeterminate="False" Minimum="0" Maximum="32768"
                                                     Height="30"
                                                     Width="{Binding HalfProgressWidth, Mode=OneTime}">
                                            <ProgressBar.RenderTransform>
                                                <ScaleTransform ScaleX="-1" />
                                            </ProgressBar.RenderTransform>
                                        </ProgressBar>
                                        <ProgressBar Opacity="0.6" CornerRadius="0 3 3 0"
                                                     Value="{Binding ValueRawUpper}"
                                                     IsIndeterminate="False" Minimum="0" Maximum="32768"
                                                     Height="30"
                                                     Width="{Binding HalfProgressWidth, Mode=OneTime}" />
                                    </StackPanel>
                                    <Label VerticalAlignment="Center" HorizontalAlignment="Center"
                                           HorizontalContentAlignment="Center"
                                           Content="{Binding ValueRaw}"
                                           Width="{Binding FullProgressWidth, Mode=OneTime}" />
                                </Grid>
                            </StackPanel>
                            <Label Margin="300 0 0 0"
                                   Width="{Binding FullProgressWidth, Mode=OneTime}"
                                   IsVisible="{Binding CalibrationText, Converter={x:Static ObjectConverters.IsNotNull}}"
                                   HorizontalContentAlignment="Center"
                                   Content="{Binding CalibrationText}" />
                        </StackPanel>

                    </StackPanel>
                    <StackPanel IsVisible="{Binding !IsDigitalToAnalog}" Orientation="Horizontal" Height="50">
                        <Label VerticalAlignment="Center" Width="300">
                            Calibrate
                        </Label>
                        <Button Command="{Binding CalibrateCommand}"
                                HorizontalContentAlignment="Center" VerticalAlignment="Bottom" Width="100">
                            Calibrate
                        </Button>
                    </StackPanel>

                    <StackPanel IsVisible="{Binding !IsDigitalToAnalog}" Orientation="Horizontal" Height="50">
                        <Label VerticalAlignment="Center" Width="300">
                            Min
                        </Label>
                        <Slider Foreground="White" VerticalAlignment="Center"
                                Width="{Binding FullProgressWidth, Mode=OneTime}" Height="50"
                                Minimum="{Binding SliderMin, Mode=OneTime}"
                                Maximum="{Binding SliderMax, Mode=OneTime}" Value="{Binding Min}">
                        </Slider>
                    </StackPanel>

                    <StackPanel IsVisible="{Binding !IsDigitalToAnalog}" Orientation="Horizontal" Height="50">
                        <Label VerticalAlignment="Center" Width="300">
                            Max
                        </Label>
                        <Slider Foreground="White" VerticalAlignment="Center"
                                Width="{Binding FullProgressWidth, Mode=OneTime}" Height="50"
                                Minimum="{Binding SliderMin, Mode=OneTime}"
                                Maximum="{Binding SliderMax, Mode=OneTime}" Value="{Binding Max}">
                        </Slider>
                    </StackPanel>

                    <StackPanel IsVisible="{Binding !IsDigitalToAnalog}" Orientation="Horizontal" Height="50">
                        <Label VerticalAlignment="Center" Width="300">
                            Deadzone
                        </Label>
                        <Slider Foreground="White" VerticalAlignment="Center"
                                Width="{Binding FullProgressWidth, Mode=OneTime}" Height="50"
                                Minimum="0"
                                Maximum="{Binding SliderMax, Mode=OneTime}" Value="{Binding DeadZone}">
                        </Slider>
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type output:OutputButton}">
                <StackPanel Orientation="Horizontal"
                            IsVisible="{Binding $parent[UserControl].((viewModels:ConfigViewModel)DataContext).IsAdvancedMode}">
                    <Label VerticalAlignment="Center"
                           VerticalContentAlignment="Center"
                           Width="300">
                        Debounce
                    </Label>
                    <NumericUpDown FormatString="{}{0:#,0}" Value="{Binding DebounceDisplay}"
                                   IsVisible="{Binding !$parent[UserControl].((viewModels:ConfigViewModel)DataContext).Deque}"
                                   VerticalAlignment="Center"
                                   Width="200" />
                    <NumericUpDown Increment="0.1" Value="{Binding DebounceDisplay}"
                                   IsVisible="{Binding $parent[UserControl].((viewModels:ConfigViewModel)DataContext).Deque}"
                                   VerticalAlignment="Center"
                                   Width="200" />
                </StackPanel>
            </DataTemplate>

            <DataTemplate DataType="{x:Type inputs:ConstantInput}">
               <StackPanel>
                   <StackPanel Orientation="Horizontal" IsVisible="{Binding Normal}">
                       <Label VerticalAlignment="Center"
                              VerticalContentAlignment="Center"
                              Width="300">
                           Value
                       </Label>
                       <NumericUpDown FormatString="{}{0:#,0}" Value="{Binding Value}" Minimum="{Binding Min}"
                                      Maximum="{Binding Max}"
                                      VerticalAlignment="Center"
                                      Width="200" />
                   </StackPanel>
                   <StackPanel Orientation="Horizontal" IsVisible="{Binding !IsAnalog}">
                       <Label VerticalAlignment="Center"
                              VerticalContentAlignment="Center"
                              Width="300">
                           Value
                       </Label>
                       <ToggleSwitch HorizontalAlignment="Right" IsChecked="{Binding ValueBool}" OnContent="On" OffContent="Off" />
                   </StackPanel>
                   <StackPanel Orientation="Horizontal" IsVisible="{Binding RbPickup}">
                       <Label VerticalAlignment="Center"
                              VerticalContentAlignment="Center"
                              Width="300">
                           Value
                       </Label>
                       <ComboBox VerticalAlignment="Center"
                                 SelectedItem="{Binding PickupSelectorType}"
                                 ItemsSource="{Binding PickupSelectorTypes}"
                                 ItemTemplate="{StaticResource EnumToStringTemplate}" />
                   </StackPanel>
                   <StackPanel Orientation="Horizontal"  IsVisible="{Binding TapBar}">
                       <Label VerticalAlignment="Center"
                              VerticalContentAlignment="Center"
                              Width="300">
                           Value
                       </Label>
                       <CheckBox IsChecked="{Binding Green}" VerticalAlignment="Center">Green</CheckBox>
                       <CheckBox IsChecked="{Binding Red}" VerticalAlignment="Center">Red</CheckBox>
                       <CheckBox IsChecked="{Binding Yellow}" VerticalAlignment="Center">Yellow</CheckBox>
                       <CheckBox IsChecked="{Binding Blue}" VerticalAlignment="Center">Blue</CheckBox>
                       <CheckBox IsChecked="{Binding Orange}" VerticalAlignment="Center">Orange</CheckBox>
                   </StackPanel>
               </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type conversions:AnalogToDigital}">
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Type
                        </Label>
                        <ComboBox HorizontalAlignment="Stretch" ItemTemplate="{StaticResource EnumToStringTemplate}"
                                  SelectedItem="{Binding AnalogToDigitalType}"
                                  ItemsSource="{Binding AnalogToDigitalTypes}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Threshold
                        </Label>

                        <Grid>
                            <StackPanel Orientation="Horizontal" IsVisible="{Binding IsUint}">
                                <ProgressBar Opacity="0.5" Value="{Binding RawAnalogValue}"
                                             IsIndeterminate="False" Minimum="0" Maximum="65536"
                                             Height="30"
                                             Width="{Binding FullProgressWidth, Mode=OneTime}" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" IsVisible="{Binding !IsUint}"
                                        Width="{Binding FullProgressWidth, Mode=OneTime}">
                                <ProgressBar Opacity="0.5" CornerRadius="0 3 3 0"
                                             Value="{Binding ValueLower}"
                                             IsIndeterminate="False" Minimum="0" Maximum="32768"
                                             Height="30"
                                             Width="{Binding HalfProgressWidth, Mode=OneTime}">
                                    <ProgressBar.RenderTransform>
                                        <ScaleTransform ScaleX="-1" />
                                    </ProgressBar.RenderTransform>
                                </ProgressBar>
                                <ProgressBar Opacity="0.5" CornerRadius="0 3 3 0"
                                             Value="{Binding ValueUpper}"
                                             IsIndeterminate="False" Minimum="0" Maximum="32768"
                                             Height="30"
                                             Width="{Binding HalfProgressWidth, Mode=OneTime}" />
                            </StackPanel>
                            <Label VerticalAlignment="Center" HorizontalContentAlignment="Center"
                                   Content="{Binding RawAnalogValue}" Width="{Binding FullProgressWidth, Mode=OneTime}" />
                            <Slider Foreground="White" VerticalAlignment="Center"
                                    Width="{Binding FullProgressWidth, Mode=OneTime}" Height="50"
                                    Minimum="{Binding Min, Mode=OneTime}"
                                    Maximum="{Binding Max, Mode=OneTime}" Value="{Binding DisplayThreshold}"
                                    IsVisible="{Binding IsUint}">
                            </Slider>
                        </Grid>
                    </StackPanel>
                    <ContentControl Content="{Binding Child}"
                                    ContentTemplate="{StaticResource OutputTemplates}" />
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type conversions:DigitalToAnalog}">
                <StackPanel>
                    <ContentControl Content="{Binding Child}"
                                    ContentTemplate="{StaticResource OutputTemplates}" />
                    <StackPanel IsVisible="{Binding !Tilt}" Orientation="Horizontal">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Value
                        </Label>
                        <NumericUpDown FormatString="{}{0:#,0}" Value="{Binding On}" Minimum="{Binding Minimum}"
                                       Maximum="{Binding Maximum}"
                                       VerticalAlignment="Center"
                                       Width="200" />
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type inputs:MacroInput}">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Input Type
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  SelectedItem="{Binding SelectedInputType1}"
                                  ItemsSource="{Binding InputTypes}"
                                  ItemTemplate="{StaticResource ImageWithTextTemplateGeneric}" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.IsVisible>
                            <MultiBinding Converter="{x:Static BoolConverters.Or}">
                                <Binding Path="IsWii" />
                                <Binding Path="IsDj" />
                                <Binding Path="IsPs2" />
                                <Binding Path="IsUsb" />
                            </MultiBinding>
                        </StackPanel.IsVisible>
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Input 1 Input
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  IsVisible="{Binding IsWii}"
                                  SelectedItem="{Binding WiiInputType1}"
                                  ItemsSource="{Binding WiiInputTypes}"
                                  ItemTemplate="{StaticResource ImageWithTextTemplate}" />
                        <ComboBox VerticalAlignment="Center"
                                  IsVisible="{Binding IsDj}"
                                  SelectedItem="{Binding DjInputType1}"
                                  ItemsSource="{Binding DjInputTypes}"
                                  ItemTemplate="{StaticResource ImageWithTextTemplate}" />
                        <ComboBox VerticalAlignment="Center"
                                  IsVisible="{Binding IsPs2}"
                                  SelectedItem="{Binding Ps2InputType1}"
                                  ItemsSource="{Binding Ps2InputTypes}"
                                  ItemTemplate="{StaticResource ImageWithTextTemplate}" />
                        <ComboBox VerticalAlignment="Center"
                                  IsVisible="{Binding IsUsb}"
                                  SelectedItem="{Binding UsbInputType1}"
                                  ItemsSource="{Binding UsbInputTypes}"
                                  ItemTemplate="{StaticResource ImageWithTextTemplate}" />
                    </StackPanel>
                    <ContentControl Content="{Binding Child1}"
                                    ContentTemplate="{StaticResource OutputTemplates}">

                        <ContentControl.IsVisible>
                            <MultiBinding Converter="{x:Static BoolConverters.And}">
                                <Binding Path="!IsWii" />
                                <Binding Path="!IsDj" />
                                <Binding Path="!IsPs2" />
                                <Binding Path="!IsUsb" />

                            </MultiBinding>
                        </ContentControl.IsVisible>
                    </ContentControl>

                    <StackPanel Orientation="Horizontal">
                        <StackPanel.IsVisible>
                            <MultiBinding Converter="{x:Static BoolConverters.Or}">
                                <Binding Path="IsWii" />
                                <Binding Path="IsDj" />
                                <Binding Path="IsPs2" />
                                <Binding Path="IsUsb" />
                            </MultiBinding>
                        </StackPanel.IsVisible>
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Input 2 Input
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  IsVisible="{Binding IsWii}"
                                  SelectedItem="{Binding WiiInputType2}"
                                  ItemsSource="{Binding WiiInputTypes}"
                                  ItemTemplate="{StaticResource ImageWithTextTemplate}" />
                        <ComboBox VerticalAlignment="Center"
                                  IsVisible="{Binding IsDj}"
                                  SelectedItem="{Binding DjInputType2}"
                                  ItemsSource="{Binding DjInputTypes}"
                                  ItemTemplate="{StaticResource ImageWithTextTemplate}" />
                        <ComboBox VerticalAlignment="Center"
                                  IsVisible="{Binding IsPs2}"
                                  SelectedItem="{Binding Ps2InputType2}"
                                  ItemsSource="{Binding Ps2InputTypes}"
                                  ItemTemplate="{StaticResource ImageWithTextTemplate}" />
                        <ComboBox VerticalAlignment="Center"
                                  IsVisible="{Binding IsUsb}"
                                  SelectedItem="{Binding UsbInputType2}"
                                  ItemsSource="{Binding UsbInputTypes}"
                                  ItemTemplate="{StaticResource ImageWithTextTemplate}" />
                    </StackPanel>
                    <ContentControl Content="{Binding Child2}"
                                    ContentTemplate="{StaticResource OutputTemplates}" />
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type combined:DjCombinedOutput}">
                <StackPanel>
                    <StackPanel
                        IsVisible="{Binding !$parent[UserControl].((viewModels:ConfigViewModel)DataContext).IsRetailMode}">
                        <StackPanel IsVisible="{Binding BindableTwi}" Orientation="Horizontal">
                            <Label VerticalAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Width="300">
                                SCL Pin
                            </Label>
                            <ComboBox VerticalAlignment="Center"
                                      SelectedItem="{Binding Scl}"
                                      ItemsSource="{Binding AvailableSclPins}"
                                      ItemTemplate="{StaticResource PinToStringTemplate}"
                                      Width="200" />
                        </StackPanel>
                        <StackPanel IsVisible="{Binding BindableTwi}" Orientation="Horizontal">
                            <Label VerticalAlignment="Center"
                                   VerticalContentAlignment="Center"
                                   Width="300">
                                SDA Pin
                            </Label>
                            <ComboBox VerticalAlignment="Center"
                                      SelectedItem="{Binding Sda}"
                                      ItemsSource="{Binding AvailableSdaPins}"
                                      ItemTemplate="{StaticResource PinToStringTemplate}"
                                      Width="200" />
                        </StackPanel>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Turntable Poll Rate
                        </Label>
                        <NumericUpDown FormatString="{}{0:#,0}" Value="{Binding PollRate}" Minimum="1"
                                       Maximum="10" Width="200" Height="30" />
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type combined:CombinedTwiOutput}">
                <StackPanel
                    IsVisible="{Binding !$parent[UserControl].((viewModels:ConfigViewModel)DataContext).IsRetailMode}">
                    <StackPanel IsVisible="{Binding BindableTwi}" Orientation="Horizontal">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            SCL Pin
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  SelectedItem="{Binding Scl}"
                                  ItemsSource="{Binding AvailableSclPins}"
                                  ItemTemplate="{StaticResource PinToStringTemplate}"
                                  Width="200" />
                    </StackPanel>
                    <StackPanel IsVisible="{Binding BindableTwi}" Orientation="Horizontal">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            SDA Pin
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  SelectedItem="{Binding Sda}"
                                  ItemsSource="{Binding AvailableSdaPins}"
                                  ItemTemplate="{StaticResource PinToStringTemplate}"
                                  Width="200" />
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type combined:GhwtCombinedOutput}">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Slider Bar Sensitivity
                        </Label>
                        <NumericUpDown FormatString="{}{0:#,0}" Value="{Binding Sensitivity}" Maximum="50"
                                       VerticalAlignment="Center"
                                       Width="200" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal"
                                IsVisible="{Binding !$parent[UserControl].((viewModels:ConfigViewModel)DataContext).IsRetailMode}">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Slider Analog Input Pin
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  SelectedItem="{Binding Pin}"
                                  ItemsSource="{Binding AvailablePins}"
                                  ItemTemplate="{StaticResource PinToStringTemplate}"
                                  Width="200" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal"
                                IsVisible="{Binding !$parent[UserControl].((viewModels:ConfigViewModel)DataContext).IsRetailMode}">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Slider S0 Pin
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  SelectedItem="{Binding PinS0}"
                                  ItemsSource="{Binding AvailablePinsDigital}"
                                  ItemTemplate="{StaticResource PinToStringTemplate}"
                                  Width="200" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal"
                                IsVisible="{Binding !$parent[UserControl].((viewModels:ConfigViewModel)DataContext).IsRetailMode}">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Slider S1 Pin
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  SelectedItem="{Binding PinS1}"
                                  ItemsSource="{Binding AvailablePinsDigital}"
                                  ItemTemplate="{StaticResource PinToStringTemplate}"
                                  Width="200" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal"
                                IsVisible="{Binding !$parent[UserControl].((viewModels:ConfigViewModel)DataContext).IsRetailMode}">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Slider S2 Pin
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  SelectedItem="{Binding PinS2}"
                                  ItemsSource="{Binding AvailablePinsDigital}"
                                  ItemTemplate="{StaticResource PinToStringTemplate}"
                                  Width="200" />
                    </StackPanel>
                </StackPanel>
            </DataTemplate>

            <DataTemplate DataType="{x:Type output:BluetoothOutput}">
                <StackPanel
                    IsVisible="{Binding !$parent[UserControl].((viewModels:ConfigViewModel)DataContext).IsRetailMode}">
                    <Button Content="{Binding ScanText}" IsEnabled="{Binding !Scanning}"
                            Command="{Binding ScanCommand}" />
                    <StackPanel Orientation="Horizontal">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Selected Device
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  SelectedItem="{Binding MacAddress}"
                                  ItemsSource="{Binding Addresses}"
                                  Width="200" />
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type combined:Ps2CombinedOutput}">
                <StackPanel
                    IsVisible="{Binding !$parent[UserControl].((viewModels:ConfigViewModel)DataContext).IsRetailMode}">
                    <StackPanel IsVisible="{Binding BindableSpi}" Orientation="Horizontal">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            MOSI / Command (Orange) Pin
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  SelectedItem="{Binding Mosi}"
                                  ItemsSource="{Binding AvailableMosiPins}"
                                  ItemTemplate="{StaticResource PinToStringTemplate}"
                                  Width="200" />
                    </StackPanel>

                    <StackPanel IsVisible="{Binding BindableSpi}" Orientation="Horizontal">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            MISO / Data (Brown) Pin
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  SelectedItem="{Binding Miso}"
                                  ItemsSource="{Binding AvailableMisoPins}"
                                  ItemTemplate="{StaticResource PinToStringTemplate}"
                                  Width="200" />
                    </StackPanel>

                    <StackPanel IsVisible="{Binding BindableSpi}" Orientation="Horizontal">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Sck / Clock (Blue) Pin
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  SelectedItem="{Binding Sck}"
                                  ItemsSource="{Binding AvailableSckPins}"
                                  ItemTemplate="{StaticResource PinToStringTemplate}"
                                  Width="200" />
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Acknowledge (Green) Pin
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  SelectedItem="{Binding Ack}"
                                  ItemsSource="{Binding AvailablePins}"
                                  ItemTemplate="{StaticResource PinToStringTemplate}"
                                  Width="200" />
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <Label VerticalAlignment="Center"
                               VerticalContentAlignment="Center"
                               Width="300">
                            Attention (Yellow) Pin
                        </Label>
                        <ComboBox VerticalAlignment="Center"
                                  SelectedItem="{Binding Att}"
                                  ItemsSource="{Binding AvailablePins}"
                                  ItemTemplate="{StaticResource PinToStringTemplate}"
                                  Width="200" />
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
            <DataTemplate />
        </netCore:OutputTemplateSelector>
        <DataTemplate DataType="output:Output" x:Key="OutputTemplate">
            <StackPanel Opacity="{Binding CombinedOpacity}">
                <Panel>
                    <StackPanel>
                        <Label HorizontalAlignment="Center" IsVisible="{Binding ChildOfCombined}"
                               Content="{Binding Title}" />
                        <StackPanel Orientation="Horizontal">
                            <ContentControl IsVisible="{Binding ChildOfCombined}"
                                            ContentTemplate="{StaticResource ImageOutputTemplate}"
                                            HorizontalAlignment="Left" Width="75" Margin="0 0 10 10"
                                            Content="{Binding }" />
                        </StackPanel>
                    </StackPanel>
                    <ToggleSwitch HorizontalAlignment="Right" IsVisible="{Binding ChildOfCombined}"
                                  IsChecked="{Binding Enabled}" OnContent="Enabled" OffContent="Disabled" />
                </Panel>
                <ContentControl Content="{Binding Input}"
                                ContentTemplate="{StaticResource OutputTemplates}" />

                <ContentControl Content="{Binding}"
                                ContentTemplate="{StaticResource OutputTemplates}" />
                <WrapPanel Orientation="Horizontal">
                    <WrapPanel.IsVisible>
                        <MultiBinding Converter="{x:Static BoolConverters.And}">
                            <Binding Path="AreLedsEnabled" />
                            <Binding Path="!IsCombined" />
                        </MultiBinding>
                    </WrapPanel.IsVisible>
                    <Label VerticalAlignment="Center"
                           VerticalContentAlignment="Center" Width="300">
                        Selected LEDs
                    </Label>
                    <ItemsControl ItemsSource="{Binding AvailableIndices}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="output:LedIndex">
                                <ToggleButton IsChecked="{Binding Selected }"
                                              Content="{Binding Index}" Width="50" HorizontalContentAlignment="Center" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </WrapPanel>
                <StackPanel Orientation="Horizontal">
                    <StackPanel.IsVisible>
                        <MultiBinding Converter="{x:Static BoolConverters.And}">
                            <Binding Path="AreLedsEnabled" />
                            <Binding Path="!IsCombined" />
                            <Binding Path="LedsRequireColours" />
                        </MultiBinding>
                    </StackPanel.IsVisible>
                    <Label VerticalAlignment="Center"
                           VerticalContentAlignment="Center" Width="300"
                           Content="{Binding LedOnLabel}" />
                    <ColorPicker IsAlphaEnabled="False" IsAlphaVisible="False" ColorSpectrumShape="Ring"
                                 Color="{Binding LedOn}" />
                </StackPanel>
                <StackPanel Orientation="Horizontal">
                    <StackPanel.IsVisible>
                        <MultiBinding Converter="{x:Static BoolConverters.And}">
                            <Binding Path="AreLedsEnabled" />
                            <Binding Path="!IsCombined" />
                            <Binding Path="LedsRequireColours" />
                        </MultiBinding>
                    </StackPanel.IsVisible>
                    <Label VerticalAlignment="Center"
                           VerticalContentAlignment="Center" Width="300"
                           Content="{Binding LedOffLabel}" />
                    <ColorPicker IsAlphaEnabled="False" IsAlphaVisible="False" ColorSpectrumShape="Ring"
                                 Color="{Binding LedOff}" />
                </StackPanel>
            </StackPanel>
        </DataTemplate>
        <DataTemplate DataType="output:Output" x:Key="CombinedOutputTemplate">
            <ContentControl Content="{Binding}"
                            ContentTemplate="{StaticResource OutputTemplate}" Background="{Binding CombinedBackground}"
                            Padding="10" Margin="0 5 10 5" Width="720" />
        </DataTemplate>
    </UserControl.Resources>
    <Panel>
        <DockPanel HorizontalAlignment="Stretch">
            <StackPanel DockPanel.Dock="Bottom" Margin="10">
                <DockPanel>
                    <StackPanel DockPanel.Dock="Left" Width="150" />
                    <StackPanel DockPanel.Dock="Right" Width="150">
                        <ToggleButton HorizontalAlignment="Right" IsChecked="{Binding AllExpanded}" Width="120">
                            <ToggleButton.Styles>
                                <Style Selector="ToggleButton:checked Label#ExpandLabel">
                                    <Setter Property="Content" Value="Collapse All" />
                                </Style>

                                <Style Selector="ToggleButton:not(:checked) Label#ExpandLabel">
                                    <Setter Property="Content" Value="Expand All" />
                                </Style>
                                <Style Selector="ToggleButton:checked Path">
                                    <Style.Animations>
                                        <Animation FillMode="Both" Duration="0:0:0.0625">
                                            <KeyFrame Cue="100%">
                                                <Setter Property="RotateTransform.Angle" Value="180" />
                                            </KeyFrame>
                                        </Animation>
                                    </Style.Animations>
                                </Style>

                                <Style Selector="ToggleButton:not(:checked) Path">
                                    <Style.Animations>
                                        <Animation FillMode="Both" Duration="0:0:0.0625">
                                            <KeyFrame Cue="0%">
                                                <Setter Property="RotateTransform.Angle" Value="180" />
                                            </KeyFrame>
                                            <KeyFrame Cue="100%">
                                                <Setter Property="RotateTransform.Angle" Value="0" />
                                            </KeyFrame>
                                        </Animation>
                                    </Style.Animations>
                                </Style>
                                <Style Selector="ToggleButton:checked">
                                    <Style Selector="^ /template/ ContentPresenter#PART_ContentPresenter">
                                        <Setter Property="Background" Value="{DynamicResource ToggleButtonBackground}" />
                                        <Setter Property="BorderBrush"
                                                Value="{DynamicResource ToggleButtonBorderBrush}" />
                                        <Setter Property="Foreground" Value="{DynamicResource ToggleButtonForeground}" />
                                    </Style>
                                    <Style Selector="^:pointerover /template/ ContentPresenter#PART_ContentPresenter">
                                        <Setter Property="Background"
                                                Value="{DynamicResource ToggleButtonBackgroundPointerOver}" />
                                        <Setter Property="BorderBrush"
                                                Value="{DynamicResource ToggleButtonBorderBrushPointerOver}" />
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource ToggleButtonForegroundPointerOver}" />
                                    </Style>

                                    <Style Selector="^:pressed">
                                        <Setter Property="RenderTransform" Value="scale(0.98)" />
                                    </Style>

                                    <Style Selector="^:pressed /template/ ContentPresenter#PART_ContentPresenter">
                                        <Setter Property="Background"
                                                Value="{DynamicResource ToggleButtonBackgroundPressed}" />
                                        <Setter Property="BorderBrush"
                                                Value="{DynamicResource ToggleButtonBorderBrushPressed}" />
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource ToggleButtonForegroundPressed}" />
                                    </Style>

                                    <Style Selector="^:disabled /template/ ContentPresenter#PART_ContentPresenter">
                                        <Setter Property="Background"
                                                Value="{DynamicResource ToggleButtonBackgroundDisabled}" />
                                        <Setter Property="BorderBrush"
                                                Value="{DynamicResource ToggleButtonBorderBrushDisabled}" />
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource ToggleButtonForegroundDisabled}" />
                                    </Style>
                                </Style>
                            </ToggleButton.Styles>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <Label x:Name="ExpandLabel" />
                                <Path HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      RenderTransformOrigin="50%,50%"
                                      Stretch="None"
                                      Stroke="White"
                                      Data="M 0 0 L 7 7 L 14 0"
                                      StrokeThickness="1">
                                    <Path.RenderTransform>
                                        <RotateTransform />
                                    </Path.RenderTransform>
                                </Path>
                            </StackPanel>
                        </ToggleButton>
                    </StackPanel>
                    <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                        <Button Content="Write Configuration" Command="{Binding WriteConfigCommand}" />
                        <Button IsVisible="{Binding SupportsReset}" Content="Revert device to Arduino"
                                Command="{Binding ResetCommand}" />
                        <Button Content="Configure another device" Command="{Binding GoBackCommand}" />
                    </StackPanel>
                </DockPanel>
                <TextBlock IsVisible="{Binding WriteToolTip, Converter={x:Static ObjectConverters.IsNotNull}}"
                           Foreground="Red" HorizontalAlignment="Center" Text="{Binding WriteToolTip}" />
                <WrapPanel HorizontalAlignment="Center">
                    <TextBlock Text="Status: " />
                    <TextBlock Text="{Binding Main.Message}" />
                </WrapPanel>
                <ProgressBar HorizontalAlignment="Stretch" ShowProgressText="True" Name="RunProgress"
                             Foreground="{Binding Main.ProgressbarColor}" Value="{Binding Main.Progress}"
                             IsIndeterminate="False" Minimum="0" Maximum="100" Height="30" />
            </StackPanel>
            <ScrollViewer VerticalContentAlignment="Center">
                <ItemsControl ItemsSource="{Binding Outputs}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="output:Output">
                            <StackPanel>
                                <Expander IsVisible="{Binding !IsEmpty}" HorizontalAlignment="Stretch"
                                          Header="{Binding}" IsExpanded="{Binding Expanded}">
                                    <Expander.HeaderTemplate>
                                        <DataTemplate DataType="output:Output">
                                            <Panel>
                                                <StackPanel Orientation="Horizontal">
                                                    <ContentControl
                                                        ContentTemplate="{StaticResource ImageOutputTemplate}"
                                                        Content="{Binding }" />
                                                    <Label VerticalAlignment="Center"
                                                           VerticalContentAlignment="Center"
                                                           Content="{Binding LocalisedName}" />
                                                </StackPanel>
                                                <ContentControl Content="{Binding}" HorizontalAlignment="Center"
                                                                ContentTemplate="{StaticResource OutputHeaderTemplates}" />

                                                <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
                                                    <Button
                                                        Command="{Binding RemoveCommand}">
                                                        Remove
                                                    </Button>
                                                    <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                                        <Button
                                                            Command="{Binding MoveUp}">
                                                            <Path HorizontalAlignment="Center"
                                                                  VerticalAlignment="Center"
                                                                  Stretch="None"
                                                                  Stroke="White"
                                                                  Data="M 0 7 L 7 0 L 14 7"
                                                                  StrokeThickness="1">
                                                            </Path>
                                                        </Button>
                                                        <Button
                                                            Command="{Binding MoveDown}">
                                                            <Path HorizontalAlignment="Center"
                                                                  VerticalAlignment="Center"
                                                                  Stretch="None"
                                                                  Stroke="White"
                                                                  Data="M 0 0 L 7 7 L 14 0"
                                                                  StrokeThickness="1">
                                                            </Path>
                                                        </Button>
                                                    </StackPanel>
                                                </StackPanel>
                                                <Label Foreground="Red" Margin="20 0 20 0"
                                                       Content="{Binding ErrorText}"
                                                       VerticalAlignment="Bottom"
                                                       HorizontalAlignment="Center"
                                                       HorizontalContentAlignment="Center"
                                                       VerticalContentAlignment="Center"
                                                       IsVisible="{Binding ErrorText, Converter={x:Static StringConverters.IsNotNullOrEmpty}}" />
                                            </Panel>
                                        </DataTemplate>
                                    </Expander.HeaderTemplate>
                                    <StackPanel>
                                        <StackPanel Orientation="Horizontal" IsVisible="{Binding IsKeyboard}">
                                            <Label VerticalAlignment="Center"
                                                   VerticalContentAlignment="Center"
                                                   Width="300">
                                                Output Type
                                            </Label>
                                            <ComboBox VerticalAlignment="Center"
                                                      SelectedItem="{Binding KeyOrMouse}"
                                                      ItemsSource="{Binding KeyOrMouseInputs}"
                                                      ItemTemplate="{StaticResource EnumToStringTemplate}" />
                                            <Button Command="{Binding FindAndAssignCommand}"
                                                    IsEnabled="{Binding ConfigurableInput}"
                                                    Content="{Binding ButtonText}" />
                                        </StackPanel>
                                        <ContentControl ContentTemplate="{StaticResource OutputSelectionTemplate}"
                                                        Content="{Binding}" />

                                        <StackPanel Orientation="Horizontal">
                                            <StackPanel.IsVisible>
                                                <MultiBinding Converter="{x:Static BoolConverters.And}">
                                                    <Binding Path="!IsCombined" />
                                                    <Binding Path="ConfigurableInput" />
                                                    <Binding
                                                        Path="!$parent[UserControl].((viewModels:ConfigViewModel)DataContext).IsRetailMode" />
                                                </MultiBinding>
                                            </StackPanel.IsVisible>
                                            <Label VerticalAlignment="Center"
                                                   VerticalContentAlignment="Center"
                                                   Width="300">
                                                Input Type
                                            </Label>
                                            <ComboBox VerticalAlignment="Center"
                                                      SelectedItem="{Binding SelectedInputType}"
                                                      ItemsSource="{Binding InputTypes}"
                                                      ItemTemplate="{StaticResource ImageWithTextTemplateGeneric}" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <StackPanel.IsVisible>
                                                <MultiBinding Converter="{x:Static BoolConverters.And}">
                                                    <Binding Path="ConfigurableInput" />
                                                    <Binding Path="!IsCombined" />
                                                    <MultiBinding Converter="{x:Static BoolConverters.Or}">
                                                        <Binding Path="IsWii" />
                                                        <Binding Path="IsDj" />
                                                        <Binding Path="IsPs2" />
                                                        <Binding Path="IsGh5" />
                                                        <Binding Path="IsWt" />
                                                        <Binding Path="IsUsb" />
                                                    </MultiBinding>
                                                </MultiBinding>
                                            </StackPanel.IsVisible>
                                            <Label VerticalAlignment="Center"
                                                   VerticalContentAlignment="Center"
                                                   Width="300">
                                                Input
                                            </Label>
                                            <ComboBox VerticalAlignment="Center"
                                                      IsVisible="{Binding IsWii}"
                                                      SelectedItem="{Binding WiiInputType}"
                                                      ItemsSource="{Binding WiiInputTypes}"
                                                      ItemTemplate="{StaticResource ImageWithTextTemplate}" />
                                            <ComboBox VerticalAlignment="Center"
                                                      IsVisible="{Binding IsUsb}"
                                                      SelectedItem="{Binding UsbInputType}"
                                                      ItemsSource="{Binding UsbInputTypes}"
                                                      ItemTemplate="{StaticResource ImageWithTextTemplate}" />
                                            <ComboBox VerticalAlignment="Center"
                                                      IsVisible="{Binding IsDj}"
                                                      SelectedItem="{Binding DjInputType}"
                                                      ItemsSource="{Binding DjInputTypes}"
                                                      ItemTemplate="{StaticResource ImageWithTextTemplate}" />
                                            <ComboBox VerticalAlignment="Center"
                                                      IsVisible="{Binding IsPs2}"
                                                      SelectedItem="{Binding Ps2InputType}"
                                                      ItemsSource="{Binding Ps2InputTypes}"
                                                      ItemTemplate="{StaticResource ImageWithTextTemplate}" />
                                            <ComboBox VerticalAlignment="Center"
                                                      IsVisible="{Binding IsGh5}"
                                                      SelectedItem="{Binding Gh5NeckInputType}"
                                                      ItemsSource="{Binding Gh5NeckInputTypes}"
                                                      ItemTemplate="{StaticResource ImageWithTextTemplate}" />
                                            <ComboBox VerticalAlignment="Center"
                                                      IsVisible="{Binding IsWt}"
                                                      SelectedItem="{Binding GhWtInputType}"
                                                      ItemsSource="{Binding GhWtInputTypes}"
                                                      ItemTemplate="{StaticResource ImageWithTextTemplate}" />
                                            <ComboBox VerticalAlignment="Center"
                                                      IsVisible="{Binding IsWt}"
                                                      SelectedItem="{Binding GhWtInputType}"
                                                      ItemsSource="{Binding GhWtInputTypes}"
                                                      ItemTemplate="{StaticResource ImageWithTextTemplate}" />
                                        </StackPanel>
                                        <ContentControl ContentTemplate="{StaticResource OutputTemplate}"
                                                        Content="{Binding}" />
                                        <ItemsControl IsVisible="{Binding IsCombined}"
                                                      HorizontalAlignment="Stretch"
                                                      IsEnabled="{Binding IsCombined}"
                                                      ItemsSource="{Binding DigitalOutputs}"
                                                      ItemTemplate="{StaticResource CombinedOutputTemplate}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <WrapPanel />
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                        </ItemsControl>
                                        <ItemsControl IsVisible="{Binding IsCombined}"
                                                      HorizontalAlignment="Stretch"
                                                      IsEnabled="{Binding IsCombined}"
                                                      ItemsSource="{Binding AnalogOutputs}"
                                                      ItemTemplate="{StaticResource CombinedOutputTemplate}">
                                            <ItemsControl.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <WrapPanel />
                                                </ItemsPanelTemplate>
                                            </ItemsControl.ItemsPanel>
                                        </ItemsControl>
                                    </StackPanel>
                                </Expander>
                                <ContentControl IsVisible="{Binding IsEmpty}"
                                                ContentTemplate="{StaticResource EmptySelector}"
                                                Content="{Binding}" />
                            </StackPanel>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
        </DockPanel>
    </Panel>
</UserControl>